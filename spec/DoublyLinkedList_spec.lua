local StartDoublyLinkedList = require('DoublyLinkedList')

describe('DoublyLinkedList', function()

  -- it('Should be able to add data to first link by adding to the end', function()
  --   local link = StartDoublyLinkedList()
  --   link.addToEnd(1)
  --   assert.equal(1, link.getDataFromLink())
  -- end)
  --
  -- it('Should be able to add data to first link by adding to the beginning', function()
  --   local link = StartDoublyLinkedList()
  --   link.addToBeginning(2)
  --   assert.equal(2, link.getDataFromLink())
  -- end)
  --
  -- it('Should be able to add data to first two links by adding to the end twice', function()
  --   local link = StartDoublyLinkedList()
  --   link.addToEnd(1)
  --   link.addToEnd(2)
  --   assert.equal(1, link.getDataFromLink())
  --   assert.equal(2, link.getNextLink().getDataFromLink())
  -- end)
  --
  -- it('Should be able to add data to first two links by adding to the beginning twice', function()
  --   local link = StartDoublyLinkedList()
  --   link.addToBeginning(1)
  --   link.addToBeginning(2)
  --   assert.equal(1, link.getDataFromLink())
  --   assert.equal(2, link.getPreviousLink().getDataFromLink())
  -- end)
  --
  -- it('Should be able to add data to first two links by adding to the end and then the beginning', function()
  --   local link = StartDoublyLinkedList()
  --   link.addToEnd(1)
  --   link.addToBeginning(2)
  --   assert.equal(1, link.getDataFromLink())
  --   assert.equal(2, link.getPreviousLink().getDataFromLink())
  -- end)
  --
  -- it('Should be able to add data to first two links by adding to the beginning and then the end', function()
  --   local link = StartDoublyLinkedList()
  --   link.addToBeginning(1)
  --   link.addToEnd(2)
  --   assert.equal(1, link.getDataFromLink())
  --   assert.equal(2, link.getNextLink().getDataFromLink())
  -- end)

  it('Should be able to add to the middle of the list after adding to the end twice', function()
    local link = StartDoublyLinkedList()
    link.addToEnd(1)
    link.addToEnd(3)
    link.getNextLink().addJustBefore(2)
    assert.equal(1, link.getDataFromLink())
    assert.equal(2, link.getNextLink().getDataFromLink())
    assert.equal(3, link.getNextLink().getNextLink().getDataFromLink())
  end)

  -- it('Should be able to add to the middle of the list after adding to the beginning twice', function()
  --   local link = StartDoublyLinkedList()
  --   link.addToBeginning(3)
  --   link.addToBeginning(1)
  --   link.getPrevLink().addJustAfter(2)
  --   assert.equal(1, link.getDataFromLink())
  --   assert.equal(2, link.getPrevLink().getDataFromLink())
  -- end)
end)
